services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: munasaba-backend-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
      DB_DATABASE: munasaba
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-secure_redis_password}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - munasaba-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  postgres:
    image: postgres:17-alpine
    container_name: munasaba-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: munasaba
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./scripts/backup:/backup:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d munasaba"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - munasaba-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  redis:
    image: redis:7.4-alpine
    container_name: munasaba-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-secure_redis_password}
    volumes:
      - redis_data_prod:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - munasaba-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Nginx reverse proxy for production
  nginx:
    image: nginx:1.27-alpine
    container_name: munasaba-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    networks:
      - munasaba-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  nginx_logs:
    driver: local

networks:
  munasaba-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
